<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 配置数据源 -->
	<bean id="abstractDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		 destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<!-- 初始大小 -->
		<property name="initialSize" value="${jdbc.initialSize}" />
		<!-- 最大连接数 -->
		<property name="maxActive" value="${jdbc.maxActive}" />
		<!-- 最大获取连接等待时间 -->
		<property name="maxWait" value="${jdbc.maxWait}" />
		<!-- 最小连接数 -->
		<property name="minIdle" value="${jdbc.minIdle}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<property name="validationQuery" value="SELECT 1" />
		<!--druid 监控  -->
		<property name="filters" value="stat"></property>
	</bean>

	<bean id="dataSourceone" parent="abstractDataSource">
		<property name="url" value="${jdbc.one.url}" />
		<property name="username" value="${jdbc.one.username}" />
		<property name="password" value="${jdbc.one.password}" />
	</bean>
	
	<bean id="dataSourcetwo" parent="abstractDataSource">
		<property name="url" value="${jdbc.two.url}" />
		<property name="username" value="${jdbc.two.username}" />
		<property name="password" value="${jdbc.two.password}" />
	</bean>
	
	<bean id="dataSource" class="com.my.core.spring.DynamicDataSource">
		<property name="targetDataSources">
			<map>
				<entry value-ref="dataSourceone" key="dataSourceone"></entry>
				<entry value-ref="dataSourcetwo" key="dataSourcetwo"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSourceone"></property>
	</bean>

	<!-- 配置事物 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/> 

	<!-- sqlSession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" /><!-- 数据源 -->
		<property name="mapperLocations" value="classpath:com/my/dao/mapper/*.xml" /><!--mapper -->
		<property name="typeAliasesPackage" value="com.my.entity" /><!-- 
			mapper resultType entity 别名 -->
	</bean>

	<!-- 配置druid监控spring jdbc -->
	<bean id="druid-stat-interceptor"
		class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	</bean>
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
		scope="prototype">
		<property name="patterns">
			<list>
				<value>com.my.service.*</value>
			</list>
		</property>
	</bean>
	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor"
			pointcut-ref="druid-stat-pointcut" />
	</aop:config>

</beans>